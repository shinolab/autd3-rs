name: pr

on:
  pull_request:
    branches: [ "main", "v*" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  changed-files:
    name: changed-files
    runs-on: ubuntu-latest
    outputs:
      src: ${{ steps.changed-files-yaml.outputs.src_any_changed }}
    steps:
      - uses: actions/checkout@v4
      - id: changed-files-yaml
        uses: tj-actions/changed-files@v46
        with:
          files_yaml: |
            src:
              - '**/*.rs'
              - '**/Cargo.toml'

  test:
    needs: changed-files
    if: ${{ needs.changed-files.outputs.src == 'true' }}
    name: test-on-${{ matrix.os }}${{ matrix.features && '-' }}${{ matrix.features }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
          - os: macos-latest
          - os: ubuntu-latest
            features: "remote nop ethercrab twincat remote_twincat simulator"
          - os: ubuntu-latest
            features: "thread-safe"
          - os: ubuntu-latest
            features: "use_meter left_handed"
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: ./.github/actions/setup-build
        with:
          components: "rustfmt, clippy"
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest
      - run: cargo make check --features "${{ matrix.features }}"

  test-for-capi:
    needs: changed-files
    if: ${{ needs.changed-files.outputs.src == 'true' }}
    name: test-for-capi
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: ./.github/actions/setup-build
        with:
          components: "rustfmt, clippy"
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest
      - run: cargo make check --no-default-features --exclude autd3-examples --features "gain, modulation, link-audit, link-nop, greedy, gs, gspat, naive, local"

  all-tests-passed:
    if: ${{ always() }}
    name: all-tests-passed
    runs-on: ubuntu-latest
    needs: test
    steps:
      - if: ${{ needs.test.result == 'failure' || needs.test.result == 'cancelled' }}
        run: exit 1

  build-docs:
    needs: changed-files
    if: ${{ needs.changed-files.outputs.src == 'true' }}
    name: build-docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: ./.github/actions/setup-build
        with:
          toolchain: nightly
      - run: cargo make doc
      - uses: dtolnay/install@cargo-docs-rs
      - run: cargo +nightly docs-rs -pautd3 
      - run: cargo +nightly docs-rs -pautd3-core
      - run: cargo +nightly docs-rs -pautd3-derive
      - run: cargo +nightly docs-rs -pautd3-driver
      - run: cargo +nightly docs-rs -pautd3-firmware-emulator
      - run: cargo +nightly docs-rs -pautd3-gain-holo
      - run: cargo +nightly docs-rs -pautd3-link-simulator
      - run: cargo +nightly docs-rs -pautd3-link-ethercrab
      - run: cargo +nightly docs-rs -pautd3-link-twincat

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: ./.github/actions/setup-build
        with:
          cache: false
          components: llvm-tools
      - uses: SierraSoftworks/setup-grcov@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          version: latest
      - run: cargo make cov lcov
      - uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage
          disable_search: true
          fail_ci_if_error: true

  no-std-check:
    needs: changed-files
    if: ${{ needs.changed-files.outputs.src == 'true' }}
    name: no-std-check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: ./.github/actions/setup-build
      - run: cargo make no_std-check

  auto-merge:
    needs:
      - all-tests-passed
      - build-docs
      - coverage
      - no-std-check
    permissions:
      pull-requests: write
      contents: write
    runs-on: ubuntu-latest
    if: ${{ always() && !cancelled() && !failure() && github.actor == 'dependabot[bot]' }}
    steps:
      - run: gh pr merge --rebase --auto "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
