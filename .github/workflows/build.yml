name: build

on:
  push:
    branches: [ "main" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  test:
    name: test-on-${{ matrix.os }}${{ matrix.features && '-' }}${{ matrix.features }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
          - os: macos-latest
          - os: ubuntu-latest
          - os: ubuntu-latest
            features: "remote"
          - os: ubuntu-latest
            features: "use_meter left_handed"
          - os: ubuntu-latest
            features: "async"
          - os: ubuntu-latest
            features: "lightweight async-trait"
          - os: ubuntu-latest
            features: "dynamic_freq"
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: ./.github/actions/setup-build
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest
      - run: cargo make check --features "${{ matrix.features }}"

  miri:
    name: test-with-miri
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: ./.github/actions/setup-build
        with:
          toolchain: nightly
          components: miri
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest
      - run: cargo make miri

  build-docs:
    name: build-docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: ./.github/actions/setup-build
        with:
          toolchain: nightly
      - run: cargo make doc
      - uses: dtolnay/install@cargo-docs-rs
      - run: | 
          cargo +nightly docs-rs -pautd3
          cargo +nightly docs-rs -pautd3-core
          cargo +nightly docs-rs -pautd3-derive
          cargo +nightly docs-rs -pautd3-driver
          cargo +nightly docs-rs -pautd3-firmware-emulator
          cargo +nightly docs-rs -pautd3-gain-holo
          cargo +nightly docs-rs -pautd3-link-simulator
          cargo +nightly docs-rs -pautd3-link-twincat
          cargo +nightly docs-rs -pautd3-modulation-audio-file
          cargo +nightly docs-rs -pautd3-protobuf

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: ./.github/actions/setup-build
        with:
          components: llvm-tools
      - uses: SierraSoftworks/setup-grcov@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          version: latest
      - run: cargo make cov lcov
      - uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage
          disable_search: true
          fail_ci_if_error: true
