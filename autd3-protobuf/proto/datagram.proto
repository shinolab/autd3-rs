syntax = "proto3";

package autd3;

import "gain.proto";
import "modulation.proto";
import "utils.proto";
import "utils-lightweight.proto";

message Clear {}

enum SilencerTarget {
  Intensity = 0;
  PulseWidth = 1;
}

message Silencer {
  message FixedUpdateRate {
    uint32 value_intensity = 1;
    uint32 value_phase = 2;
  }

  message FixedCompletionSteps {
    optional uint32 value_intensity = 1;
    optional uint32 value_phase = 2;
    optional bool strict_mode = 3;
  }

  message FixedCompletionTime {
    optional uint32 value_intensity = 1;
    optional uint32 value_phase = 2;
    optional bool strict_mode = 3;
  }

  oneof config {
    FixedUpdateRate fixed_update_rate = 1;
    FixedCompletionTime fixed_completion_time = 2;
    FixedCompletionSteps fixed_completion_steps = 3;
  }
  SilencerTarget target = 4;
}

message Synchronize {}

message ForceFan { repeated bool value = 1; }

message ReadsFPGAState { repeated bool value = 1; }

enum GainSTMMode {
  PhaseIntensityFull = 0;
  PhaseFull = 1;
  PhaseHalf = 2;
}

message GainSTMOption { optional GainSTMMode mode = 1; }

message GainSTM {
  repeated Gain gains = 1;
  SamplingConfig sampling_config = 2;
  GainSTMOption option = 3;
}

message FociSTM {
  repeated ControlPoints foci = 1;
  SamplingConfig sampling_config = 2;
}

message WithSegment {
  oneof inner {
    Gain gain = 1;
    Modulation modulation = 2;
    FociSTM foci_stm = 3;
    GainSTM gain_stm = 4;
  }
  Segment segment = 5;
  TransitionMode transition_mode = 6;
}

message WithLoopBehavior {
  oneof inner {
    Modulation modulation = 1;
    FociSTM foci_stm = 2;
    GainSTM gain_stm = 3;
  }
  LoopBehavior loop_behavior = 4;
  Segment segment = 5;
  TransitionMode transition_mode = 6;
}

message SwapSegment {
  message Gain {
    Segment segment = 1;
    TransitionMode transition_mode = 2;
  }

  message Modulation {
    Segment segment = 1;
    TransitionMode transition_mode = 2;
  }

  message FociSTM {
    Segment segment = 1;
    TransitionMode transition_mode = 2;
  }

  message GainSTM {
    Segment segment = 1;
    TransitionMode transition_mode = 2;
  }
  oneof variant {
    Gain gain = 1;
    Modulation modulation = 2;
    FociSTM foci_stm = 3;
    GainSTM gain_stm = 4;
  }
}
