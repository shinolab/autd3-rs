syntax = "proto3";

package autd3;

import "gain.proto";
import "utils.proto";
import "utils-lightweight.proto";

message Clear {}

enum SilencerTarget{
  Intensity = 0;
  PulseWidth = 1;
}

message SilencerFixedUpdateRate {
      uint32 value_intensity = 1;
      uint32 value_phase = 2;
      optional SilencerTarget target = 3;
}

message SilencerFixedCompletionTime {
      uint32 value_intensity = 1;
      uint32 value_phase = 2;
      optional SilencerTarget target = 4;
      optional bool strict_mode = 3;
}

message Silencer {
    oneof config {
        SilencerFixedUpdateRate fixed_update_rate = 1;
        SilencerFixedCompletionTime fixed_completion_time = 2;
    }
}

message Synchronize {}

message ForceFan {
    repeated bool value = 1;
}

message ReadsFPGAState {
    repeated bool value = 1;
}

enum GainSTMMode {
  PhaseIntensityFull = 0;
  PhaseFull = 1;
  PhaseHalf = 2;
}

message GainSTM {
    SamplingConfig config = 1;
    repeated Gain gains = 2;
    optional LoopBehavior loop_behavior = 3;
    optional GainSTMMode mode = 4;
}

message GainSTMWithSegment {
  GainSTM gain_stm = 1;
  Segment segment = 2;
  optional TransitionMode transition_mode = 3;
}

message FociSTMProps {
    SamplingConfig config = 1;
    optional LoopBehavior loop_behavior = 2;
}

message FociSTM1 {
    FociSTMProps props = 1;
    repeated ControlPoints foci = 2;
}

message FociSTM2 {
    FociSTMProps props = 1;
    repeated ControlPoints foci = 2;
}

message FociSTM3 {
    FociSTMProps props = 1;
    repeated ControlPoints foci = 2;
}

message FociSTM4 {
    FociSTMProps props = 1;
    repeated ControlPoints foci = 2;
}

message FociSTM5 {
    FociSTMProps props = 1;
    repeated ControlPoints foci = 2;
}

message FociSTM6 {
    FociSTMProps props = 1;
    repeated ControlPoints foci = 2;
}

message FociSTM7 {
    FociSTMProps props = 1;
    repeated ControlPoints foci = 2;
}

message FociSTM8 {
    FociSTMProps props = 1;
    repeated ControlPoints foci = 2;
}

message FociSTM {
  oneof inner {
    FociSTM1 n1 = 1;
    FociSTM2 n2 = 2;
    FociSTM3 n3 = 3;
    FociSTM4 n4 = 4;
    FociSTM5 n5 = 5;
    FociSTM6 n6 = 6;
    FociSTM7 n7 = 7;
    FociSTM8 n8 = 8;
  }
}

message FociSTMWithSegment {
  FociSTM foci_stm = 1;
  Segment segment = 2;
  optional TransitionMode transition_mode = 3;
}

message SwapSegmentGain {
    Segment segment = 1;
    TransitionMode transition_mode = 2;
}

message SwapSegmentModulation {
    Segment segment = 1;
    TransitionMode transition_mode = 2;
}

message SwapSegmentFociSTM {
    Segment segment = 1;
    TransitionMode transition_mode = 2;
}

message SwapSegmentGainSTM {
    Segment segment = 1;
    TransitionMode transition_mode = 2;
}

message SwapSegment {
  oneof inner {
    SwapSegmentGain gain = 1;
    SwapSegmentModulation modulation = 2;
    SwapSegmentFociSTM foci_stm = 3;
    SwapSegmentGainSTM gain_stm = 4;
  }
}